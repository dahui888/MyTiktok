apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.bytedance.tiktok"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1000
        versionName "1.0.0"
        multiDexEnabled true//方法数超过64K，需要分包
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //使用JAVA8 支持lambda语法
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        // 仅保留中文语种
        resConfigs "zh-rCN"

        // 仅保留 xxhdpi 图片资源（目前主流分辨率 1920 * 1080）
        resConfig 'xxhdpi'

        // 仅保留两种cpu 类型架构的 so 库
        ndk {
            abiFilters 'arm64-v8a'//'armeabi-v7a'
        }

    }

    buildFeatures {
        dataBinding = true
    }

    // APK 签名
    signingConfigs {
        debug {//测试签名
            storeFile file("../myfile/tiktok.jks")
            storePassword 'tiktok'
            keyAlias 'tiktok'
            keyPassword 'tiktok'
        }

        release {//正式签名
            storeFile file("../myfile/tiktok.jks")
            storePassword 'tiktok'
            keyAlias 'tiktok'
            keyPassword 'tiktok'
        }
    }

    buildTypes {
        debug {//测试包
            minifyEnabled false // 设置混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            debuggable true    // 是否可调试
            jniDebuggable true // jni可调试
        }

        release {//正式包
            minifyEnabled false // 设置混淆
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            debuggable false    // 是否可调试
            jniDebuggable false // jni可调试

            // Apk 输出文件名配置
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    outputFileName = rootProject.getName() + '_v' + variant.versionName + '_' + variant.buildType.name
                    if (variant.buildType.name == buildTypes.release.getName()) {
                        outputFileName += '_' + new Date().format('MMdd')
                    }
                    outputFileName += '.apk'
                }
            }
        }
    }

    packagingOptions {
        // 剔除这个包下的所有文件（除了签名信息）
        exclude 'META-INF/*******'
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //Glide图片加载
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    //沉浸式状态栏和沉浸式导航栏
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    //谷歌UI控件库
    implementation "com.google.android.material:material:1.3.0"
    //底部Tab
    implementation 'com.androidkun:XTabLayout:1.1.5'
    //动画
    implementation 'com.airbnb.android:lottie:3.6.1'
    implementation 'io.reactivex:rxjava:1.3.8'
    //权限
    //implementation 'com.hjq:xxpermissions:10.2'
    //内存泄漏
    // debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'
    //腾讯BugLy
    //implementation 'com.tencent.bugly:crashreport_upgrade:1.5.0'
    //implementation 'com.tencent.bugly:nativecrashreport:3.7.700'

    //jetpack全家桶
//    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
//    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.0.0'
//    implementation 'androidx.lifecycle:lifecycle-livedata:2.0.0'
//    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:3.2.0'
//    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:3.2.0'
}
